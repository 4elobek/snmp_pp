#include <doctest.h>

#include <vector>

#include "snmp_pp/snmpmsg.h"

namespace
{

const std::vector<unsigned char> TRAP_1{
0x6f, 0x30, 0x01, 0x02, 0x04, 0x01, 0x70, 0x06, 0x62, 0x75, 0x69, 0x6c, 0xa7, 0x63, 0x02, 0x62,
0x5a, 0x04, 0xb1, 0x4d, 0x02, 0xfb, 0x00, 0x01, 0x01, 0x02, 0x30, 0x00, 0x30, 0x54, 0x06, 0x0f,
0x2b, 0x08, 0x01, 0x06, 0x01, 0x02, 0x03, 0x01, 0x43, 0x00, 0x1c, 0x03, 0x63, 0xb0, 0x16, 0x30,
0x0a, 0x06, 0x06, 0x2b, 0x06, 0x01, 0x01, 0x03, 0x04, 0x01, 0x00, 0x01, 0x08, 0x06, 0x03, 0x2a,
0x05, 0x04, 0x07, 0x06, 0x09, 0x08, 0x17, 0x30, 0x08, 0x06, 0x06, 0x2b, 0x02, 0x01, 0x01, 0x01,
0x00, 0x06, 0x0b, 0x04, 0x65, 0x48, 0x6c, 0x6c, 0x20, 0x6f, 0x69, 0x53, 0x6f, 0x6d, 0x30, 0x6e,
0x06, 0x10, 0x2a, 0x08, 0x04, 0x03, 0x06, 0x05, 0x08, 0x07, 0x04, 0x08, 0x64, 0x04, 0x76, 0x65,
0x00, 0x31
};

}

TEST_CASE("Raw trap data can be parsed.")
{
    Snmp_pp::SnmpMessage snmpmsg;
    snmpmsg.load(TRAP_1.data(), TRAP_1.size());

//    REQUIRE(!pdu.get_error_status());
//
//    Snmp_pp::Oid id;
//    REQUIRE(pdu.get_notify_id(id));
//    REQUIRE(id.get_printable() == "1.2.3.4.5.6.7.8.9");
}